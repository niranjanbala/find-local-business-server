/*
 * File: app/view/LandingPage.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LandingPage', {
    extend: 'Ext.container.Viewport',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    height: 250,
                    id: 'pointsTable',
                    title: 'IPL 2013 Points Table',
                    store: 'PointsTableStore',
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'teamName',
                            text: 'TeamName'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'matches',
                            text: 'Matches'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'won',
                            text: 'Won'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'lost',
                            text: 'Lost'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'nr',
                            text: 'Nr'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'netrr',
                            text: 'Netrr'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'tied',
                            text: 'Tied'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'points',
                            text: 'Points'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'forOver',
                            text: 'ForOver'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'forRuns',
                            text: 'ForRuns'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'againstOver',
                            text: 'AgainstOver'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'againstRuns',
                            text: 'AgainstRuns'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'chances',
                            text: 'Chances'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    height: 320,
                    id: 'upcomingFixtures',
                    title: 'Upcoming Fixtures',
                    store: 'FixturesTableStore',
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 197,
                            dataIndex: 'team1',
                            text: 'Team1'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 199,
                            dataIndex: 'team2',
                            text: 'Team2'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 157,
                            dataIndex: 'winner',
                            text: 'Winner',
                            editor: {
                                xtype: 'combobox',
                                store: [
                                    
                                ]
                            }
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {
                            ptype: 'cellediting',
                            listeners: {
                                beforeedit: {
                                    fn: me.onGridcelleditingpluginBeforeEdit,
                                    scope: me
                                }
                            }
                        })
                    ]
                },
                {
                    xtype: 'label',
                    padding: '0 50 0  10',
                    text: 'Press this button to Predict'
                },
                {
                    xtype: 'button',
                    height: 19,
                    text: 'Run Predictor',
                    listeners: {
                        click: {
                            fn: me.onButtonClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridcelleditingpluginBeforeEdit: function(editor, e, options) {
        var team1=e.record.get('team1');
        var team2=e.record.get('team2');
        e.column.getEditor().setValue("");
        e.column.getEditor().bindStore([team1,team2]);
    },

    onButtonClick: function(button, e, options) {
        var grid=Ext.ComponentQuery.query('#pointsTable')[0];
        var grid2=Ext.ComponentQuery.query('#upcomingFixtures')[0];
        var lineIndex=1;
        var formParamsIn="";
        Ext.each(grid2.getStore().data.items, function(item, index) {
            var line=item.get('team1')+','+item.get('team2')+','+item.get('winner');
            var param="param"+lineIndex+"="+line+"&";
            lineIndex=lineIndex+1;
            formParamsIn=formParamsIn+param;    
        });

        var store=Ext.create("MyApp.store.PointsTableStore",{autoLoad:true});
        store.setProxy({
            type: 'rest',
            api: {
                read: "http://find-business.appspot.com/ipl/predict"
            },
            actionMethods: {
                read: 'POST'
            },
            reader: {type:'json'},
            writer: {type:'json'}
        });
        store.on('load', function(v,r,success) {
            if(success) {        
                grid.getStore().loadRecords(r);
            }
        });
        store.load({params: formParamsIn});
    }

});