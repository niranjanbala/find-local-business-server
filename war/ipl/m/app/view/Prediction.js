/*
 * File: app/view/Prediction.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.Prediction', {
    extend: 'Ext.Panel',

    config: {
        id: 'predictionPanel',
        width: 326,
        items: [
            {
                xtype: 'toolbar',
                docked: 'top',
                id: 'navigator2',
                items: [
                    {
                        xtype: 'button',
                        id: 'previous',
                        itemId: 'mybutton2',
                        width: 143,
                        icon: 'http://find-business.appspot.com/ipl/images/previous48.png',
                        text: 'BACK'
                    }
                ]
            },
            {
                xtype: 'spacefilling',
                height: 300,
                id: 'chart',
                width: 320,
                series: [
                    {
                        type: 'gauge',
                        axes: [
                            {
                                type: 'gauge',
                                position: 'gauge',
                                minimum: 0,
                                maximum: 100,
                                steps: 10,
                                margin: 10
                            }
                        ],
                        subStyle: {
                            fillStyle: [
                                '#115fa6',
                                'lightgrey'
                            ]
                        },
                        title: 'Chance of Qualifying (%)',
                        donut: 80,
                        value: 0
                    }
                ]
            },
            {
                xtype: 'selectfield',
                id: 'selectedTeam',
                itemId: 'myselectfield1',
                label: 'Select Team',
                labelWidth: '35%',
                displayField: 'teamName',
                store: 'pointTableStore',
                valueField: 'teamName'
            },
            {
                xtype: 'label',
                html: 'Select a team to see chances of qualifying.'
            }
        ],
        listeners: [
            {
                fn: 'onPreviousTap',
                event: 'tap',
                delegate: '#previous'
            },
            {
                fn: 'onMyselectfield1Change',
                event: 'change',
                delegate: '#selectedTeam'
            }
        ]
    },

    onPreviousTap: function(button, e, options) {
        Ext.ComponentQuery.query('#main')[0].previous();
    },

    onMyselectfield1Change: function(selectfield, newValue, oldValue, options) {
        selectfield.getParent().setValueForSeries(newValue);
    },

    loadData: function(records) {
        var selectedTeam=Ext.ComponentQuery.query(this.observableId +' > #selectedTeam')[0].getValue();
        this.records=records;
        this.setValueForSeries(selectedTeam);
    },

    setValueForSeries: function(teamName) {
        var series=Ext.ComponentQuery.query(this.observableId +' > #chart')[0].getSeries()[0];
        Ext.each(this.records,function(record) {    
            if(record.get('teamName')===teamName) {
                var chances=record.get('chances');    
                var colors=['#F49D10', '#ddd'];
                if(chances>95) {
                    colors[0]='#0B610B';
                }
                else if(chances>90) {
                    colors[0]='#74DF00';
                }else if(chances>80) {
                    colors[0]='#FFBF00';
                }else if(chances>70) {
                    colors[0]='#E2A9F3';
                }else if(chances>60) {
                    colors[0]='#F7BE81';
                }else if(chances>40) {
                    colors[0]='#82B525';
                }else if(chances>10) {
                    colors[0]='#DF0101';
                }else {
                    colors[0]='#000000';
                }            
                series.setValue(chances);
                series.setColors(colors);
            }
        });
    },

    getPreviousButton: function() {
        return Ext.ComponentQuery.query(this.observableId +' > #navigator2')[0].getItems().items[0];
    }

});